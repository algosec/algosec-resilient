# This file is a replica of the default file created by the command line tools on a regular machine.
# This file is used for local integration tests of this code.

[resilient]
# Basic service connection
host=yourserver.example.com
port=443
email=you@example.com
password=yourpassword
org=YourOrg

# Actions Module connection
#stomp_port=65001

# Directory containing additional components to load
# componentsdir=components
# Existing directory to write logs to, or set with $APP_LOG_DIR
#logdir=/tmp
#logfile=app.log
#loglevel=DEBUG

# If your Resilient server uses a self-signed TLS certificate, or some
# other certificate that is not automatically trusted by your machine,
# you need to explicitly tell the Python scripts that it should be trusted.
# If you don't want to use a cert you can set cafile=false.
# To explicitly trust a site, download its certificate to a file, e.g:
#    mkdir -p ~/.resilient
#    openssl s_client -connect resilient.example.com:443 -showcerts < /dev/null 2> /dev/null | openssl x509 -outform PEM > ~/.resilient/cert.cer
# then specify the file (remove the '#' from the line below):
#cafile=~/.resilient/cert.cer
cafile=false

[algosec]
server=local.algosec.com
username=admin
password=algosec
ssl_enabled=false
isolation_request_subject=IBM Resilient Integration Isolation Request For {}
isolation_request_requestor=IBM Resilient Integration
isolation_request_requestor_email=resilient@integration.dummy
isolation_request_description=Isolation Request Initiated By The IBM Resilient Integration.
isolation_request_template=
