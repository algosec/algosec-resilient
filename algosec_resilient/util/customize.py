# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for algosec_resilient"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the algosec_resilient package"""
    reload_params = {"package": u"algosec_resilient",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"algosec_hostname"], 
                    "datatables": [u"algosec_associated_applications", u"algosec_internet_connectivity_queries", u"algosec_isolation_requests"], 
                    "message_destinations": [u"algosec"], 
                    "functions": [u"algosec_check_host_internet_connectivity", u"algosec_isolate_host_from_network", u"algosec_list_associated_applications"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_algosec_check_host_internet_connectivity", u"example_algosec_isolate_host_from_network", u"example_algosec_list_associated_applications"], 
                    "actions": [u"Example: AlgoSec: Check Host Internet Connectivity", u"Example: AlgoSec: List Associated Applications", u"Isolate from Network (AlgoSec)"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     algosec_hostname
    #   DataTables:
    #     algosec_associated_applications
    #     algosec_internet_connectivity_queries
    #     algosec_isolation_requests
    #   Message Destinations:
    #     algosec
    #   Functions:
    #     algosec_check_host_internet_connectivity
    #     algosec_isolate_host_from_network
    #     algosec_list_associated_applications
    #   Workflows:
    #     example_algosec_check_host_internet_connectivity
    #     example_algosec_isolate_host_from_network
    #     example_algosec_list_associated_applications
    #   Rules:
    #     Example: AlgoSec: Check Host Internet Connectivity
    #     Example: AlgoSec: List Associated Applications
    #     Isolate from Network (AlgoSec)


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMSwgIm1pbm9yIjogMCwgImJ1aWxkX251bWJl
ciI6IDQyNTQsICJ2ZXJzaW9uIjogIjMxLjAuNDI1NCJ9LCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9u
IjogMiwgImlkIjogNzAsICJleHBvcnRfZGF0ZSI6IDE1NDM5NTM2MjkzMDYsICJmaWVsZHMiOiBb
eyJpZCI6IDUyOTAsICJuYW1lIjogImluY190cmFpbmluZyIsICJ0ZXh0IjogIlNpbXVsYXRpb24i
LCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAwLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRoZSBp
bmNpZGVudCBpcyBhIHNpbXVsYXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhpcyBmaWVs
ZCBpcyByZWFkLW9ubHkuIiwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJoaWRlX25vdGlmaWNh
dGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIi
OiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQi
OiAiYzNmMGUzZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2EzMzA4Y2NhIiwgIm9wZXJhdGlvbnMiOiBb
XSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiB0cnVl
LCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAi
aW5jaWRlbnQvaW5jX3RyYWluaW5nIiwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZh
bHNlfSwgeyJpZCI6IDU3NzMsICJuYW1lIjogImFsZ29zZWNfaG9zdG5hbWUiLCAidGV4dCI6ICJh
bGdvc2VjX2hvc3RuYW1lIiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTEsICJ0b29sdGlw
IjogIlRoZSBob3N0bmFtZSB1c2VkIHRvIGNhcnJ5IG9wZXJhdGlvbnMgd2l0aCB0aGUgQWxnb1Nl
YyBzZXJ2ZXIiLCAicGxhY2Vob2xkZXIiOiAiSG9zdG5hbWUgKGUuZyAxMC4wLjAuMTIpIiwgImlu
cHV0X3R5cGUiOiAidGV4dCIsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAiaGlkZV9ub3RpZmljYXRp
b24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjog
ZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjog
ImZkOWIzNjUwLWY3OWYtNDg2Mi04ZjBkLWEzZGZlY2ExNjYwZiIsICJvcGVyYXRpb25zIjogW10s
ICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2Us
ICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJf
X2Z1bmN0aW9uL2FsZ29zZWNfaG9zdG5hbWUiLCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVk
IjogZmFsc2V9XSwgImluY2lkZW50X3R5cGVzIjogW3sidXBkYXRlX2RhdGUiOiAxNTQzOTUzOTk0
MzE4LCAiY3JlYXRlX2RhdGUiOiAxNTQzOTUzOTk0MzE4LCAidXVpZCI6ICJiZmVlYzJkNC0zNzcw
LTExZTgtYWQzOS00YTAwMDQwNDRhYTAiLCAiZGVzY3JpcHRpb24iOiAiQ3VzdG9taXphdGlvbiBQ
YWNrYWdlcyAoaW50ZXJuYWwpIiwgImV4cG9ydF9rZXkiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdl
cyAoaW50ZXJuYWwpIiwgIm5hbWUiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwp
IiwgImVuYWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZhbHNlLCAicGFyZW50X2lkIjogbnVsbCwg
ImhpZGRlbiI6IGZhbHNlLCAiaWQiOiAwfV0sICJwaGFzZXMiOiBbXSwgImF1dG9tYXRpY190YXNr
cyI6IFtdLCAib3ZlcnJpZGVzIjogW10sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFt7Im5hbWUi
OiAiYWxnb3NlYyIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJhbGdvc2VjIiwgImRlc3RpbmF0aW9u
X3R5cGUiOiAwLCAiZXhwZWN0X2FjayI6IHRydWUsICJ1c2VycyI6IFsiYWxtb2cuY29oZW5AYWxn
b3NlYy5jb20iXSwgInV1aWQiOiAiYjc5OWViMTYtNDUzZi00YmU4LWJmYTgtMmU1NDdlMWU3MmM0
IiwgImV4cG9ydF9rZXkiOiAiYWxnb3NlYyJ9XSwgImFjdGlvbnMiOiBbeyJpZCI6IDg3NCwgIm5h
bWUiOiAiRXhhbXBsZTogQWxnb1NlYzogQ2hlY2sgSG9zdCBJbnRlcm5ldCBDb25uZWN0aXZpdHki
LCAidHlwZSI6IDAsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJjb25kaXRpb25zIjogW3si
bWV0aG9kIjogIm9iamVjdF9hZGRlZCIsICJmaWVsZF9uYW1lIjogbnVsbCwgInZhbHVlIjogbnVs
bCwgInR5cGUiOiBudWxsLCAiZXZhbHVhdGlvbl9pZCI6IG51bGx9LCB7Im1ldGhvZCI6ICJlcXVh
bHMiLCAiZmllbGRfbmFtZSI6ICJhcnRpZmFjdC50eXBlIiwgInZhbHVlIjogIklQIEFkZHJlc3Mi
LCAidHlwZSI6IG51bGwsICJldmFsdWF0aW9uX2lkIjogbnVsbH1dLCAiYXV0b21hdGlvbnMiOiBb
XSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW10sICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVfYWxn
b3NlY19jaGVja19ob3N0X2ludGVybmV0X2Nvbm5lY3Rpdml0eSJdLCAidmlld19pdGVtcyI6IFtd
LCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ1dWlkIjogImVlYjhkOTJkLTY3MmUtNGY4YS1i
YjA0LThlZWUyNjVlNTM5OCIsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IEFsZ29TZWM6IENoZWNr
IEhvc3QgSW50ZXJuZXQgQ29ubmVjdGl2aXR5IiwgImxvZ2ljX3R5cGUiOiAiYWxsIn0sIHsiaWQi
OiA4NzYsICJuYW1lIjogIkV4YW1wbGU6IEFsZ29TZWM6IExpc3QgQXNzb2NpYXRlZCBBcHBsaWNh
dGlvbnMiLCAidHlwZSI6IDAsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJjb25kaXRpb25z
IjogW3sibWV0aG9kIjogImVxdWFscyIsICJmaWVsZF9uYW1lIjogImFydGlmYWN0LnR5cGUiLCAi
dmFsdWUiOiAiSVAgQWRkcmVzcyIsICJ0eXBlIjogbnVsbCwgImV2YWx1YXRpb25faWQiOiBudWxs
fSwgeyJtZXRob2QiOiAib2JqZWN0X2FkZGVkIiwgImZpZWxkX25hbWUiOiBudWxsLCAidmFsdWUi
OiBudWxsLCAidHlwZSI6IG51bGwsICJldmFsdWF0aW9uX2lkIjogbnVsbH1dLCAiYXV0b21hdGlv
bnMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW10sICJ3b3JrZmxvd3MiOiBbImV4YW1w
bGVfYWxnb3NlY19saXN0X2Fzc29jaWF0ZWRfYXBwbGljYXRpb25zIl0sICJ2aWV3X2l0ZW1zIjog
W10sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQiOiAiMzFkNTgyZGYtYTI3OS00NDc3
LWE4NWMtYzhiZWI4NDViNGM2IiwgImV4cG9ydF9rZXkiOiAiRXhhbXBsZTogQWxnb1NlYzogTGlz
dCBBc3NvY2lhdGVkIEFwcGxpY2F0aW9ucyIsICJsb2dpY190eXBlIjogImFsbCJ9LCB7ImlkIjog
ODc5LCAibmFtZSI6ICJJc29sYXRlIGZyb20gTmV0d29yayAoQWxnb1NlYykiLCAidHlwZSI6IDEs
ICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJjb25kaXRpb25zIjogW3sibWV0aG9kIjogImVx
dWFscyIsICJmaWVsZF9uYW1lIjogImFydGlmYWN0LnR5cGUiLCAidmFsdWUiOiAiSVAgQWRkcmVz
cyIsICJ0eXBlIjogbnVsbCwgImV2YWx1YXRpb25faWQiOiBudWxsfV0sICJhdXRvbWF0aW9ucyI6
IFtdLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXSwgIndvcmtmbG93cyI6IFsiZXhhbXBsZV9h
bGdvc2VjX2lzb2xhdGVfaG9zdF9mcm9tX25ldHdvcmsiXSwgInZpZXdfaXRlbXMiOiBbXSwgInRp
bWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidXVpZCI6ICIxYTdlZmQ4Mi1hNmY5LTRjZTItODE3Yi1j
OTQ2MDA3MjkxMDMiLCAiZXhwb3J0X2tleSI6ICJJc29sYXRlIGZyb20gTmV0d29yayAoQWxnb1Nl
YykiLCAibG9naWNfdHlwZSI6ICJhbGwifV0sICJsYXlvdXRzIjogW10sICJub3RpZmljYXRpb25z
IjogbnVsbCwgInRpbWVmcmFtZXMiOiBudWxsLCAibG9jYWxlIjogbnVsbCwgImluZHVzdHJpZXMi
OiBudWxsLCAicmVndWxhdG9ycyI6IG51bGwsICJnZW9zIjogbnVsbCwgInRhc2tfb3JkZXIiOiBb
XSwgImFjdGlvbl9vcmRlciI6IFtdLCAidHlwZXMiOiBbeyJpZCI6IG51bGwsICJ0eXBlX2lkIjog
OCwgInR5cGVfbmFtZSI6ICJhbGdvc2VjX2Fzc29jaWF0ZWRfYXBwbGljYXRpb25zIiwgImZpZWxk
cyI6IHsiYXJ0aWZhY3RfaXAiOiB7ImlkIjogNTgyNSwgIm5hbWUiOiAiYXJ0aWZhY3RfaXAiLCAi
dGV4dCI6ICJBcnRpZmFjdCBJUCIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6IDEwOTQsICJ0
b29sdGlwIjogIiIsICJwbGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInJl
cXVpcmVkIjogImFsd2F5cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjog
ZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6
IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiNDAyNDFiNDMtNGIxMS00YjUyLThi
NWUtYjY3YTA0OGU0ZWNkIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9
LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAi
cmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogImFsZ29zZWNfYXNzb2NpYXRlZF9hcHBs
aWNhdGlvbnMvYXJ0aWZhY3RfaXAiLCAib3JkZXIiOiAwLCAid2lkdGgiOiAxMTMsICJ0ZW1wbGF0
ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0sICJhcHBsaWNhdGlvbl9uYW1lIjogeyJpZCI6
IDU4MjYsICJuYW1lIjogImFwcGxpY2F0aW9uX25hbWUiLCAidGV4dCI6ICJBcHBsaWNhdGlvbiBO
YW1lIiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTA5NCwgInRvb2x0aXAiOiAiVGhlIGFz
c29jaWF0ZWQgYnVzaW5lc3MgYXBwbGljYXRpb24gbmFtZSIsICJwbGFjZWhvbGRlciI6ICJFeGNo
YW5nZSBTZXJ2ZXIiLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInJlcXVpcmVkIjogImFsd2F5cyIs
ICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogdHJ1ZSwgImRlZmF1bHRfY2hv
c2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogdHJ1ZSwgImludGVybmFsIjog
ZmFsc2UsICJ1dWlkIjogIjA1ZTQyN2Y3LWMyMDMtNGI4Yi05YTIwLTYzOGRjM2FlNDlkZCIsICJv
cGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVh
ZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAi
ZXhwb3J0X2tleSI6ICJhbGdvc2VjX2Fzc29jaWF0ZWRfYXBwbGljYXRpb25zL2FwcGxpY2F0aW9u
X25hbWUiLCAib3JkZXIiOiAxLCAid2lkdGgiOiAxODQsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJl
Y2F0ZWQiOiBmYWxzZX0sICJidXNpbmVzc2Zsb3dfZGFzaGJvYXJkIjogeyJpZCI6IDU4MjgsICJu
YW1lIjogImJ1c2luZXNzZmxvd19kYXNoYm9hcmQiLCAidGV4dCI6ICJBcHBsaWNhdGlvbiBJbiBC
dXNpbmVzc0Zsb3ciLCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAxMDk0LCAidG9vbHRpcCI6
ICJVUkwgZm9yIHRoZSBhcHBsaWNhdGlvbidzIGRhc2hib2FyZCBvbiBBbGdvU2VjIEJ1c2luZXNz
RmxvdyIsICJwbGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0YXJlYSIsICJyZXF1
aXJlZCI6ICJhbHdheXMiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IHRy
dWUsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IHRy
dWUsICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICI3MDVhMmJkNi1kNTQ3LTQ2MzUtYmFhNi05
MmRlMmMyMjJjM2YiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2
YWx1ZXMiOiBbXSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNo
X3RleHQiOiB0cnVlLCAiZXhwb3J0X2tleSI6ICJhbGdvc2VjX2Fzc29jaWF0ZWRfYXBwbGljYXRp
b25zL2J1c2luZXNzZmxvd19kYXNoYm9hcmQiLCAib3JkZXIiOiAzLCAid2lkdGgiOiAzMTksICJ0
ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0sICJpc19jcml0aWNhbCI6IHsiaWQi
OiA1ODI3LCAibmFtZSI6ICJpc19jcml0aWNhbCIsICJ0ZXh0IjogIklzIENyaXRpY2FsIiwgInBy
ZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTA5NCwgInRvb2x0aXAiOiAiSXMgdGhlIGFwcGxpY2F0
aW9uIG1hcmtlZCBhcyBjcml0aWNhbCBpbiBBbGdvU2VjIEJ1c2luZXNzRmxvdyIsICJwbGFjZWhv
bGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6ICJib29sZWFuIiwgInJlcXVpcmVkIjogImFsd2F5cyIs
ICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2No
b3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IHRydWUsICJpbnRlcm5hbCI6
IGZhbHNlLCAidXVpZCI6ICI5ZmE2ZDRkNS01MDIzLTRiOTAtODI4Yi05YWFmOTljM2ZlZDIiLCAi
b3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2YWx1ZXMiOiBbXSwgInJl
YWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwg
ImV4cG9ydF9rZXkiOiAiYWxnb3NlY19hc3NvY2lhdGVkX2FwcGxpY2F0aW9ucy9pc19jcml0aWNh
bCIsICJvcmRlciI6IDIsICJ3aWR0aCI6IDM4LCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVk
IjogZmFsc2V9fSwgInByb3BlcnRpZXMiOiB7ImNhbl9jcmVhdGUiOiBmYWxzZSwgImNhbl9kZXN0
cm95IjogZmFsc2UsICJmb3Jfd2hvIjogW119LCAicGFyZW50X3R5cGVzIjogWyJpbmNpZGVudCJd
LCAiZGlzcGxheV9uYW1lIjogIkFzc29jaWF0ZWQgQXBwbGljYXRpb25zIChBbGdvU2VjKSIsICJm
b3Jfbm90aWZpY2F0aW9ucyI6IGZhbHNlLCAiZm9yX2FjdGlvbnMiOiBmYWxzZSwgImZvcl9jdXN0
b21fZmllbGRzIjogZmFsc2UsICJleHBvcnRfa2V5IjogImFsZ29zZWNfYXNzb2NpYXRlZF9hcHBs
aWNhdGlvbnMiLCAidXVpZCI6ICI2ZjYwZjU0YS01NmMzLTRlODctYWQwZS0xZDQxM2ZhZmIxYjYi
LCAiYWN0aW9ucyI6IFtdLCAic2NyaXB0cyI6IFtdfSwgeyJpZCI6IG51bGwsICJ0eXBlX2lkIjog
OCwgInR5cGVfbmFtZSI6ICJhbGdvc2VjX2ludGVybmV0X2Nvbm5lY3Rpdml0eV9xdWVyaWVzIiwg
ImZpZWxkcyI6IHsiYXJ0aWZhY3RfaXAiOiB7ImlkIjogNTgyMywgIm5hbWUiOiAiYXJ0aWZhY3Rf
aXAiLCAidGV4dCI6ICJBcnRpZmFjdCBJUCIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6IDEw
OTMsICJ0b29sdGlwIjogIiIsICJwbGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0
IiwgInJlcXVpcmVkIjogImFsd2F5cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hv
c2VuIjogdHJ1ZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0
aW9uIjogdHJ1ZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogIjc4NzA4NzA5LWI1MWQtNGEx
Mi05M2U0LWUzYWZmMDg3ZjQ5OCIsICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMi
OiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1
ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJhbGdvc2VjX2ludGVybmV0X2Nv
bm5lY3Rpdml0eV9xdWVyaWVzL2FydGlmYWN0X2lwIiwgIm9yZGVyIjogMCwgIndpZHRoIjogMTE0
LCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9LCAiaXNfaXRfY29ubmVjdGVk
X3RvX3RoZV9pbnRlcm5ldCI6IHsiaWQiOiA1ODI5LCAibmFtZSI6ICJpc19pdF9jb25uZWN0ZWRf
dG9fdGhlX2ludGVybmV0IiwgInRleHQiOiAiQ29ubmVjdGVkIFRvIEludGVybmV0PyIsICJwcmVm
aXgiOiBudWxsLCAidHlwZV9pZCI6IDEwOTMsICJ0b29sdGlwIjogIldoZXRoZXIgb3Igbm90IHRo
ZSBob3N0IGhhcyBhY2Nlc3MgdG8gdGhlIGludGVybmV0IiwgInBsYWNlaG9sZGVyIjogIlllcy9O
byIsICJpbnB1dF90eXBlIjogInRleHQiLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgImhpZGVfbm90
aWZpY2F0aW9uIjogZmFsc2UsICJjaG9zZW4iOiB0cnVlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2Vy
dmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiB0cnVlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1
aWQiOiAiMDQ5ZWMwZWMtYzBiNC00YzFmLWIwYWItYTU0YzRhYjRmMmE1IiwgIm9wZXJhdGlvbnMi
OiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiBm
YWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5
IjogImFsZ29zZWNfaW50ZXJuZXRfY29ubmVjdGl2aXR5X3F1ZXJpZXMvaXNfaXRfY29ubmVjdGVk
X3RvX3RoZV9pbnRlcm5ldCIsICJvcmRlciI6IDEsICJ3aWR0aCI6IDg4LCAidGVtcGxhdGVzIjog
W10sICJkZXByZWNhdGVkIjogZmFsc2V9LCAicXVlcnlfdXJsIjogeyJpZCI6IDU4MzEsICJuYW1l
IjogInF1ZXJ5X3VybCIsICJ0ZXh0IjogIlRyYWZmaWMgU2ltdWxhdGlvbiBEZXRhaWxzIiwgInBy
ZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTA5MywgInRvb2x0aXAiOiAiIiwgInBsYWNlaG9sZGVy
IjogIiIsICJpbnB1dF90eXBlIjogInRleHRhcmVhIiwgInJlcXVpcmVkIjogImFsd2F5cyIsICJo
aWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nl
bl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBm
YWxzZSwgInV1aWQiOiAiZjI2M2Q5ZDYtNGUzNC00OWMxLTg4YzYtM2I1NDEwOGEyNmM5IiwgIm9w
ZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFk
X29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogdHJ1ZSwgImV4
cG9ydF9rZXkiOiAiYWxnb3NlY19pbnRlcm5ldF9jb25uZWN0aXZpdHlfcXVlcmllcy9xdWVyeV91
cmwiLCAib3JkZXIiOiAyLCAid2lkdGgiOiA0ODIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0
ZWQiOiBmYWxzZX19LCAicHJvcGVydGllcyI6IHsiY2FuX2NyZWF0ZSI6IGZhbHNlLCAiY2FuX2Rl
c3Ryb3kiOiBmYWxzZSwgImZvcl93aG8iOiBbXX0sICJwYXJlbnRfdHlwZXMiOiBbImluY2lkZW50
Il0sICJkaXNwbGF5X25hbWUiOiAiQ29ubmVjdGl2aXR5IHRvIEludGVybmV0IChBbGdvU2VjKSIs
ICJmb3Jfbm90aWZpY2F0aW9ucyI6IGZhbHNlLCAiZm9yX2FjdGlvbnMiOiBmYWxzZSwgImZvcl9j
dXN0b21fZmllbGRzIjogZmFsc2UsICJleHBvcnRfa2V5IjogImFsZ29zZWNfaW50ZXJuZXRfY29u
bmVjdGl2aXR5X3F1ZXJpZXMiLCAidXVpZCI6ICIzODgzYzA3MS0yMmYyLTQ0YmUtOGJhMC05YzA3
YzZjMGQ1OTIiLCAiYWN0aW9ucyI6IFtdLCAic2NyaXB0cyI6IFtdfSwgeyJpZCI6IG51bGwsICJ0
eXBlX2lkIjogOCwgInR5cGVfbmFtZSI6ICJhbGdvc2VjX2lzb2xhdGlvbl9yZXF1ZXN0cyIsICJm
aWVsZHMiOiB7Imhvc3RuYW1lIjogeyJpZCI6IDU3NzUsICJuYW1lIjogImhvc3RuYW1lIiwgInRl
eHQiOiAiQXJ0aWZhY3QgSVAiLCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAxMDkxLCAidG9v
bHRpcCI6ICIiLCAicGxhY2Vob2xkZXIiOiAiIiwgImlucHV0X3R5cGUiOiAidGV4dCIsICJoaWRl
X25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogdHJ1ZSwgImRlZmF1bHRfY2hvc2VuX2J5
X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogdHJ1ZSwgImludGVybmFsIjogZmFsc2Us
ICJ1dWlkIjogIjlmZGNiYmM1LTlkNTUtNDE1Yy05OWFjLTc4ZjQ3Mjk1ZWU0NSIsICJvcGVyYXRp
b25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5
IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0
X2tleSI6ICJhbGdvc2VjX2lzb2xhdGlvbl9yZXF1ZXN0cy9ob3N0bmFtZSIsICJvcmRlciI6IDEs
ICJ3aWR0aCI6IDEyMywgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgImNo
YW5nZV9yZXF1ZXN0X3VybCI6IHsiaWQiOiA1Nzc2LCAibmFtZSI6ICJjaGFuZ2VfcmVxdWVzdF91
cmwiLCAidGV4dCI6ICJDaGFuZ2UgUmVxdWVzdCIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6
IDEwOTEsICJ0b29sdGlwIjogIiIsICJwbGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6ICJ0
ZXh0YXJlYSIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJk
ZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAi
aW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiM2FkOTAyZWItNzlhNS00NWQ5LWI4MzYtNTZjMGU1
Y2FlNzA0IiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVz
IjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0
IjogdHJ1ZSwgImV4cG9ydF9rZXkiOiAiYWxnb3NlY19pc29sYXRpb25fcmVxdWVzdHMvY2hhbmdl
X3JlcXVlc3RfdXJsIiwgIm9yZGVyIjogMiwgIndpZHRoIjogNDY1LCAidGVtcGxhdGVzIjogW10s
ICJkZXByZWNhdGVkIjogZmFsc2V9LCAiaWQiOiB7ImlkIjogNTc3NCwgIm5hbWUiOiAiaWQiLCAi
dGV4dCI6ICJDaGFuZ2UgUmVxdWVzdCBJRCIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6IDEw
OTEsICJ0b29sdGlwIjogIiIsICJwbGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6ICJudW1i
ZXIiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IHRydWUsICJkZWZhdWx0
X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IHRydWUsICJpbnRlcm5h
bCI6IGZhbHNlLCAidXVpZCI6ICJiZWFiNmY4My1hZDQ2LTQ1MTAtODA4Ny0xYzM5N2JiNzkxNmIi
LCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2YWx1ZXMiOiBbXSwg
InJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxz
ZSwgImV4cG9ydF9rZXkiOiAiYWxnb3NlY19pc29sYXRpb25fcmVxdWVzdHMvaWQiLCAib3JkZXIi
OiAwLCAid2lkdGgiOiA5MiwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfX0s
ICJwcm9wZXJ0aWVzIjogeyJjYW5fY3JlYXRlIjogZmFsc2UsICJjYW5fZGVzdHJveSI6IGZhbHNl
LCAiZm9yX3dobyI6IFtdfSwgInBhcmVudF90eXBlcyI6IFsiaW5jaWRlbnQiXSwgImRpc3BsYXlf
bmFtZSI6ICJJc29sYXRpb24gQ2hhbmdlIFJlcXVlc3RzIChBbGdvU2VjKSIsICJmb3Jfbm90aWZp
Y2F0aW9ucyI6IGZhbHNlLCAiZm9yX2FjdGlvbnMiOiBmYWxzZSwgImZvcl9jdXN0b21fZmllbGRz
IjogZmFsc2UsICJleHBvcnRfa2V5IjogImFsZ29zZWNfaXNvbGF0aW9uX3JlcXVlc3RzIiwgInV1
aWQiOiAiZDgyYzAxYTAtNDdiYS00MmQ1LTg1NmQtMTA2OGM4NTMxMzRiIiwgImFjdGlvbnMiOiBb
XSwgInNjcmlwdHMiOiBbXX1dLCAic2NyaXB0cyI6IFtdLCAiaW5jaWRlbnRfYXJ0aWZhY3RfdHlw
ZXMiOiBbXSwgIndvcmtmbG93cyI6IFt7IndvcmtmbG93X2lkIjogMzAxLCAibmFtZSI6ICJFeGFt
cGxlOiBBbGdvU2VjOiBDaGVjayBIb3N0IEludGVybmV0IENvbm5lY3Rpdml0eSIsICJwcm9ncmFt
bWF0aWNfbmFtZSI6ICJleGFtcGxlX2FsZ29zZWNfY2hlY2tfaG9zdF9pbnRlcm5ldF9jb25uZWN0
aXZpdHkiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAiZGVzY3JpcHRpb24iOiAiQW4gZXhh
bXBsZSB3b3JrZmxvdyBzaG93aW5nIGhvdyBjaGVjayBpbnRlcm5ldCBjb25uZWN0aW9uIGZvciBh
IGdpdmVuIFwiSVAgQWRkcmVzc1wiIGFydGlmYWN0IHVzaW5nIEFsZ29TZWMgRmlyZUZsb3cuIFRo
ZSBjb25uZWN0aXZpdHkgcXVlcnkgcmVzdWx0cyBhcmUgdXBkYXRlZCBpbiB0aGUgaW5jaWRlbnQn
cyBEYXRhIFRhYmxlIGNhbGxlZCBcIkFsZ29TZWMgSW50ZXJuZXQgQ29ubmVjdGlvblwiIiwgImNy
ZWF0b3JfaWQiOiAiYWxtb2cuY29oZW5AYWxnb3NlYy5jb20iLCAibGFzdF9tb2RpZmllZF9ieSI6
ICJhbG1vZy5jb2hlbkBhbGdvc2VjLmNvbSIsICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTQzOTUx
NTM0MjMxLCAiZXhwb3J0X2tleSI6ICJleGFtcGxlX2FsZ29zZWNfY2hlY2tfaG9zdF9pbnRlcm5l
dF9jb25uZWN0aXZpdHkiLCAidXVpZCI6ICIwN2FlOWNjNS04OGE4LTRjM2UtOTA2Ni1iMTc0NTI1
MzU4MTQiLCAiY29udGVudCI6IHsid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9hbGdvc2VjX2NoZWNr
X2hvc3RfaW50ZXJuZXRfY29ubmVjdGl2aXR5IiwgInhtbCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4w
XCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9t
Zy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3
dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3
dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93d3cu
b21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDovL3Jl
c2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAx
L1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1h
LWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0
XCI+PHByb2Nlc3MgaWQ9XCJleGFtcGxlX2FsZ29zZWNfY2hlY2tfaG9zdF9pbnRlcm5ldF9jb25u
ZWN0aXZpdHlcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGU6IEFsZ29TZWM6
IENoZWNrIEhvc3QgSW50ZXJuZXQgQ29ubmVjdGl2aXR5XCI+PGRvY3VtZW50YXRpb24+PCFbQ0RB
VEFbQW4gZXhhbXBsZSB3b3JrZmxvdyBzaG93aW5nIGhvdyBjaGVjayBpbnRlcm5ldCBjb25uZWN0
aW9uIGZvciBhIGdpdmVuIFwiSVAgQWRkcmVzc1wiIGFydGlmYWN0IHVzaW5nIEFsZ29TZWMgRmly
ZUZsb3cuIFRoZSBjb25uZWN0aXZpdHkgcXVlcnkgcmVzdWx0cyBhcmUgdXBkYXRlZCBpbiB0aGUg
aW5jaWRlbnQncyBEYXRhIFRhYmxlIGNhbGxlZCBcIkFsZ29TZWMgSW50ZXJuZXQgQ29ubmVjdGlv
blwiXV0+PC9kb2N1bWVudGF0aW9uPjxzdGFydEV2ZW50IGlkPVwiU3RhcnRFdmVudF8xNTVhc3ht
XCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wMjZvcjlwPC9vdXRnb2luZz48L3N0YXJ0RXZlbnQ+
PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMGZmczk0OFwiIG5hbWU9XCJBbGdvU2VjOiBD
aGVjayBIb3N0IEludGVybmV0IENvbm4uLi5cIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+
PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cImU2ODA5MmZjLTZk
ODItNGQ2OC1iOWQ2LTA0NTVmYjExZWZiNVwiPntcImlucHV0c1wiOnt9LFwicG9zdF9wcm9jZXNz
aW5nX3NjcmlwdFwiOlwiIyMgIEV4YW1wbGU6IEFsZ29TZWM6IENoZWNrIEhvc3QgSW50ZXJuZXQg
Q29ubmVjdGl2aXR5IC0gcG9zdC1wcm9jZXNzaW5nIHNjcmlwdCAjI1xcblxcbiMgRXhhbXBsZSBv
ZiBleHBlY3RlZCBpbnRlcm5ldCBjb25uZWN0aXZpdHkgcmVzdWx0XFxuXFxcIlxcXCJcXFwiXFxu
eydhcnRpZmFjdF9pcCc6ICcxMC4wLjAuMScsICdpc19pdF9jb25uZWN0ZWRfdG9fdGhlX2ludGVy
bmV0JzogJ1llcycsICdxdWVyeV91cmwnOiAnaHR0cHM6Ly9sb2NhbC5hbGdvc2VjL2ZhL3F1ZXJ5
L3Jlc3VsdHMvIy93b3JrL0FMTF9GSVJFV0FMTFNfcXVlcnktMTU0MzYyMjU2MjIwNi8nfVxcblxc
bm9yXFxuXFxueydhcnRpZmFjdF9pcCc6ICcxMC4wLjAuMScsICdpc19pdF9jb25uZWN0ZWRfdG9f
dGhlX2ludGVybmV0JzogJ05vdCBSb3V0ZWQnLCAncXVlcnlfdXJsJzogJ2h0dHBzOi8vbG9jYWwu
YWxnb3NlYy9mYS9xdWVyeS9yZXN1bHRzLyMvd29yay9BTExfRklSRVdBTExTX3F1ZXJ5LTE1NDM2
MjI1NjIyMDYvJ31cXG5cXFwiXFxcIlxcXCJcXG5cXG4jICBHbG9iYWxzXFxuRklFTERfTkFNRVMg
PSBbXFxuICAgJ2FydGlmYWN0X2lwJyxcXG4gICAnaXNfaXRfY29ubmVjdGVkX3RvX3RoZV9pbnRl
cm5ldCcsXFxuICAgJ3F1ZXJ5X3VybCcsXFxuXVxcblxcbiMgUHJvY2Vzc2luZyBpZiB0aGUgZnVu
Y3Rpb24gaXMgYSBzdWNjZXNzXFxuIyBpZihyZXN1bHRzLnN1Y2Nlc3MpOlxcbmVudHJ5ID0gcmVz
dWx0c1xcbiMgQWRkIFJvd1xcbnJvdyA9IGluY2lkZW50LmFkZFJvdyhcXFwiYWxnb3NlY19pbnRl
cm5ldF9jb25uZWN0aXZpdHlfcXVlcmllc1xcXCIpXFxuXFxuZm9yIGZpZWxkX25hbWUgaW4gRklF
TERfTkFNRVM6XFxuICB0cnk6XFxuICAgIHJvd192YWx1ZSA9IGhlbHBlci5jcmVhdGVSaWNoVGV4
dChzdHIoZW50cnlbZmllbGRfbmFtZV0pKVxcbiAgICByb3dbZmllbGRfbmFtZV0gPSByb3dfdmFs
dWVcXG4gIGV4Y2VwdCBJbmRleEVycm9yOlxcbiAgICByb3dbZmllbGRfbmFtZV0gPSAnTi9BJ1wi
LFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMuYWxnb3NlY19ob3N0bmFtZSA9IGFy
dGlmYWN0LnZhbHVlXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48
aW5jb21pbmc+U2VxdWVuY2VGbG93XzAyNm9yOXA8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5j
ZUZsb3dfMHlpbzFwNDwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48ZW5kRXZlbnQgaWQ9XCJFbmRF
dmVudF8wZHQwOHIxXCI+PGluY29taW5nPlNlcXVlbmNlRmxvd18weWlvMXA0PC9pbmNvbWluZz48
L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMDI2b3I5cFwiIHNvdXJj
ZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzBmZnM5
NDhcIi8+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18weWlvMXA0XCIgc291cmNlUmVm
PVwiU2VydmljZVRhc2tfMGZmczk0OFwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzBkdDA4cjFcIi8+
PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0
IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBp
ZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1c
IiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjwvcHJvY2Vzcz48YnBtbmRp
OkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5F
bGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBl
IGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFz
eG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJc
IiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwi
IHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90
YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpC
b3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlv
bl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50
IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5
cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBt
bmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tf
MGZmczk0OFwiIGlkPVwiU2VydmljZVRhc2tfMGZmczk0OF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIyNjBcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQ
TU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzBkdDA4cjFc
IiBpZD1cIkVuZEV2ZW50XzBkdDA4cjFfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIg
d2lkdGg9XCIzNlwiIHg9XCI0MjlcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNDQ3XCIgeT1cIjIyN1wiLz48
L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBt
bkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMDI2b3I5cFwiIGlkPVwiU2VxdWVuY2VGbG93XzAyNm9y
OXBfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE5OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRc
IiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMjYwXCIgeHNpOnR5cGU9XCJvbWdkYzpQ
b2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9
XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIyMjlcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJl
bD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVu
Y2VGbG93XzB5aW8xcDRcIiBpZD1cIlNlcXVlbmNlRmxvd18weWlvMXA0X2RpXCI+PG9tZ2RpOndh
eXBvaW50IHg9XCIzNjBcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21n
ZGk6d2F5cG9pbnQgeD1cIjQyOVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIv
PjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBc
IiB4PVwiMzk0LjVcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1O
RWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9u
cz4iLCAidmVyc2lvbiI6IDIxfSwgImFjdGlvbnMiOiBbXX0sIHsid29ya2Zsb3dfaWQiOiAzMDIs
ICJuYW1lIjogIkV4YW1wbGU6IEFsZ29TZWM6IExpc3QgQXNzb2NpYXRlZCBBcHBsaWNhdGlvbnMi
LCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9hbGdvc2VjX2xpc3RfYXNzb2NpYXRlZF9h
cHBsaWNhdGlvbnMiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAiZGVzY3JpcHRpb24iOiAi
R2l2ZW4gYW4gSVAvSG9zdCBsaXN0IGFsbCB0aGUgYXBwbGljYXRpb25zIGFzc29jaWF0ZWQgd2l0
aCBpdCB0byBiZXR0ZXIgYXNzZXMgdGhlIHJpc2sgb2YgdGhlIGluY2lkZW50LiBJbnNlcnQgdGhl
IHJlc3VsdHMgaW50byB0aGUgXCJBbGdvU2VjIEFzc29jaWF0ZWQgQXBwbGljYXRpb25zXCIgRGF0
YSBUYWJsZSBhbmQgc3BlY2lmeSB0aGUgYXBwbGljYXRpb24ncyBjcml0aWNhbGl0eSBhbmQgYSBs
aW5rIHVybCB0byB0aGUgYXBwbGljYXRpb24gZGFzaGJvYXJkIG9uIEFsZ29TZWMgQnVzaW5lc3NG
bG93LiIsICJjcmVhdG9yX2lkIjogImFsbW9nLmNvaGVuQGFsZ29zZWMuY29tIiwgImxhc3RfbW9k
aWZpZWRfYnkiOiAiYWxtb2cuY29oZW5AYWxnb3NlYy5jb20iLCAibGFzdF9tb2RpZmllZF90aW1l
IjogMTU0Mzk1MTUzNTkzNywgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9hbGdvc2VjX2xpc3RfYXNz
b2NpYXRlZF9hcHBsaWNhdGlvbnMiLCAidXVpZCI6ICI5NjJhODVjNS02MTFkLTQzZjMtOGIyOS0y
YjQ1ZDliYzhhOTMiLCAiY29udGVudCI6IHsid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9hbGdvc2Vj
X2xpc3RfYXNzb2NpYXRlZF9hcHBsaWNhdGlvbnMiLCAieG1sIjogIjw/eG1sIHZlcnNpb249XCIx
LjBcIiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cu
b21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8v
d3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8v
d3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3
dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8v
cmVzaWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIw
MDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hl
bWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rl
c3RcIj48cHJvY2VzcyBpZD1cImV4YW1wbGVfYWxnb3NlY19saXN0X2Fzc29jaWF0ZWRfYXBwbGlj
YXRpb25zXCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBBbGdvU2VjOiBM
aXN0IEFzc29jaWF0ZWQgQXBwbGljYXRpb25zXCI+PGRvY3VtZW50YXRpb24+PCFbQ0RBVEFbR2l2
ZW4gYW4gSVAvSG9zdCBsaXN0IGFsbCB0aGUgYXBwbGljYXRpb25zIGFzc29jaWF0ZWQgd2l0aCBp
dCB0byBiZXR0ZXIgYXNzZXMgdGhlIHJpc2sgb2YgdGhlIGluY2lkZW50LiBJbnNlcnQgdGhlIHJl
c3VsdHMgaW50byB0aGUgXCJBbGdvU2VjIEFzc29jaWF0ZWQgQXBwbGljYXRpb25zXCIgRGF0YSBU
YWJsZSBhbmQgc3BlY2lmeSB0aGUgYXBwbGljYXRpb24ncyBjcml0aWNhbGl0eSBhbmQgYSBsaW5r
IHVybCB0byB0aGUgYXBwbGljYXRpb24gZGFzaGJvYXJkIG9uIEFsZ29TZWMgQnVzaW5lc3NGbG93
Ll1dPjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwi
PjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMTg4Y25sdTwvb3V0Z29pbmc+PC9zdGFydEV2ZW50Pjxz
ZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzFsNWo3cXlcIiBuYW1lPVwiQWxnb1NlYzogTGlz
dCBBc3NvY2lhdGVkIEFwcGxpY2F0Li4uXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxl
eHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCJiN2M1NDliMi00MDUy
LTRiYzgtYjI1Zi02MTQwYzQzYjFlMWJcIj57XCJpbnB1dHNcIjp7fSxcInBvc3RfcHJvY2Vzc2lu
Z19zY3JpcHRcIjpcIiMjIEV4YW1wbGU6IEFsZ29TZWM6IExpc3QgQXNzb2NpYXRlZCBBcHBsaWNh
dGlvbnMgLSBwb3N0LXByb2Nlc3Npbmcgc2NyaXB0ICMjXFxuXFxuIyBFeGFtcGxlIG9mIGV4cGVj
dGVkIGFzc29jaWF0ZWQgYXBwbGljYXRpb25zIHF1ZXJ5XFxuXFxcIlxcXCJcXFwiXFxue1xcbiAg
J3N1Y2Nlc3MnOiBUcnVlLFxcbiAgJ2VudHJpZXMnOiBbXFxuICAgIHsnYXJ0aWZhY3RfaXAnOiAn
MTAuMC4wLjEnLCAnYXBwbGljYXRpb25fbmFtZSc6ICdIUiBDUk0nLCAnaXNfY3JpdGljYWwnOiBU
cnVlLCAnYnVzaW5lc3NmbG93X2Rhc2hib2FyZCc6ICdodHRwczovLzEwLjAuMC4xMi9CdXNpbmVz
c0Zsb3cvIyFhcHBsaWNhdGlvbi8yOTMvZGFzaGJvYXJkJ30sXFxuICAgIHsnYXJ0aWZhY3RfaXAn
OiAnMTI4LjAuMC4xMicsICdhcHBsaWNhdGlvbl9uYW1lJzogJ0Nyb24gTWFuYWdlcicsICdpc19j
cml0aWNhbCc6IEZhbHNlLCAnYnVzaW5lc3NmbG93X2Rhc2hib2FyZCc6ICdodHRwczovLzEwLjAu
MC4xMi9CdXNpbmVzc0Zsb3cvIyFhcHBsaWNhdGlvbi8yOTgvZGFzaGJvYXJkJ30sXFxuICBdXFxu
fVxcblxcXCJcXFwiXFxcIlxcblxcbiMgIEdsb2JhbHNcXG5GSUVMRF9OQU1FUyA9IFtcXG4gICAn
YXJ0aWZhY3RfaXAnLFxcbiAgICdhcHBsaWNhdGlvbl9uYW1lJyxcXG4gICAnaXNfY3JpdGljYWwn
LFxcbiAgICdidXNpbmVzc2Zsb3dfZGFzaGJvYXJkJyxcXG5dXFxuXFxuIyBQcm9jZXNzaW5nIGlm
IHRoZSBmdW5jdGlvbiBpcyBhIHN1Y2Nlc3NcXG5pZihyZXN1bHRzWydzdWNjZXNzJ10pOlxcbiAg
Zm9yIGVudHJ5IGluIHJlc3VsdHNbJ2VudHJpZXMnXTpcXG4gICAgIyBBZGQgUm93XFxuICAgIHJv
dyA9IGluY2lkZW50LmFkZFJvdyhcXFwiYWxnb3NlY19hc3NvY2lhdGVkX2FwcGxpY2F0aW9uc1xc
XCIpXFxuICAgIFxcbiAgICBmb3IgZmllbGRfbmFtZSBpbiBGSUVMRF9OQU1FUzpcXG4gICAgICB0
cnk6XFxuICAgICAgICBpZiBmaWVsZF9uYW1lID09IFxcXCJpc19jcml0aWNhbFxcXCI6XFxuICAg
ICAgICAgIHJvd1tmaWVsZF9uYW1lXSA9IGJvb2woZW50cnlbZmllbGRfbmFtZV0pXFxuICAgICAg
ICBlbHNlOlxcbiAgICAgICAgICByb3dfdmFsdWUgPSBoZWxwZXIuY3JlYXRlUmljaFRleHQoc3Ry
KGVudHJ5W2ZpZWxkX25hbWVdKSlcXG4gICAgICAgICAgcm93W2ZpZWxkX25hbWVdID0gcm93X3Zh
bHVlXFxuICAgICAgZXhjZXB0IEluZGV4RXJyb3I6XFxuICAgICAgICByb3dbZmllbGRfbmFtZV0g
PSBcXFwiTi9BXFxcIlxcblwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMuYWxn
b3NlY19ob3N0bmFtZSA9IGFydGlmYWN0LnZhbHVlXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9l
eHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzE4OGNubHU8L2luY29taW5n
PjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMXhwM2w2aTwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48
ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8wMXRndTFyXCI+PGluY29taW5nPlNlcXVlbmNlRmxvd18x
eHAzbDZpPC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZs
b3dfMTg4Y25sdVwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1c
IlNlcnZpY2VUYXNrXzFsNWo3cXlcIi8+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18x
eHAzbDZpXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMWw1ajdxeVwiIHRhcmdldFJlZj1cIkVu
ZEV2ZW50XzAxdGd1MXJcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4
eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0
aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJT
dGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIv
PjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1u
ZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwi
PjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9
XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lk
dGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpC
b3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2Jw
bW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5F
bGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4
eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5
OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVs
ZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2Rp
XCI+PG9tZ2RpOndheXBvaW50IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjIyMFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRc
IiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVt
ZW50PVwiU2VydmljZVRhc2tfMWw1ajdxeVwiIGlkPVwiU2VydmljZVRhc2tfMWw1ajdxeV9kaVwi
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIyNjZcIiB5PVwi
MTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1c
IkVuZEV2ZW50XzAxdGd1MXJcIiBpZD1cIkVuZEV2ZW50XzAxdGd1MXJfZGlcIj48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI0NDlcIiB5PVwiMTg4XCIvPjxicG1u
ZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwi
NDY3XCIgeT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxi
cG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMTg4Y25sdVwiIGlkPVwi
U2VxdWVuY2VGbG93XzE4OGNubHVfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE5OFwiIHhzaTp0
eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMjY2XCIg
eHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9t
Z2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIyMzJcIiB5PVwiMTg0XCIv
PjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5FZGdlIGJw
bW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzF4cDNsNmlcIiBpZD1cIlNlcXVlbmNlRmxvd18xeHAz
bDZpX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIzNjZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjQ0OVwiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNDA3LjVcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5M
YWJlbD48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRp
YWdyYW0+PC9kZWZpbml0aW9ucz4iLCAidmVyc2lvbiI6IDEyfSwgImFjdGlvbnMiOiBbXX0sIHsi
d29ya2Zsb3dfaWQiOiAyNzksICJuYW1lIjogIkV4YW1wbGU6IEFsZ29TZWM6IElzb2xhdGUgSG9z
dCBGcm9tIE5ldHdvcmsiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9hbGdvc2VjX2lz
b2xhdGVfaG9zdF9mcm9tX25ldHdvcmsiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAiZGVz
Y3JpcHRpb24iOiAiQW4gZXhhbXBsZSB3b3JrZmxvdyBzaG93aW5nIGhvdyB0byBpc29sYXRlIFwi
SVAgQWRkcmVzc1wiIGFydGlmYWN0IHVzaW5nIEFsZ29TZWMgRmlyZUZsb3cuIFRoZSBGaXJlRmxv
dyBpc29sYXRpb24gcmVxdWVzdCBkZXRhaWxzIGFyZSB1cGRhdGVkIGluIHRoZSBpbmNpZGVudCdz
IERhdGEgVGFibGUgY2FsbGVkIFwiQWxnb1NlYyBJc29sYXRpb24gUmVxdWVzdHNcIiIsICJjcmVh
dG9yX2lkIjogImFsbW9nLmNvaGVuQGFsZ29zZWMuY29tIiwgImxhc3RfbW9kaWZpZWRfYnkiOiAi
YWxtb2cuY29oZW5AYWxnb3NlYy5jb20iLCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU0Mzk1MTI4
MjI5MiwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9hbGdvc2VjX2lzb2xhdGVfaG9zdF9mcm9tX25l
dHdvcmsiLCAidXVpZCI6ICI1YjgwMmE0Mi1mZWU1LTQ4MGYtYTQ5Yy0yMzBiZjVjZGNhZmIiLCAi
Y29udGVudCI6IHsid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9hbGdvc2VjX2lzb2xhdGVfaG9zdF9m
cm9tX25ldHdvcmsiLCAieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVU
Ri04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4v
MjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9C
UE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9E
RC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQv
MjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50LmlibS5jb20v
YnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1s
bnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJn
ZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1c
ImV4YW1wbGVfYWxnb3NlY19pc29sYXRlX2hvc3RfZnJvbV9uZXR3b3JrXCIgaXNFeGVjdXRhYmxl
PVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBBbGdvU2VjOiBJc29sYXRlIEhvc3QgRnJvbSBOZXR3
b3JrXCI+PGRvY3VtZW50YXRpb24+PCFbQ0RBVEFbQW4gZXhhbXBsZSB3b3JrZmxvdyBzaG93aW5n
IGhvdyB0byBpc29sYXRlIFwiSVAgQWRkcmVzc1wiIGFydGlmYWN0IHVzaW5nIEFsZ29TZWMgRmly
ZUZsb3cuIFRoZSBGaXJlRmxvdyBpc29sYXRpb24gcmVxdWVzdCBkZXRhaWxzIGFyZSB1cGRhdGVk
IGluIHRoZSBpbmNpZGVudCdzIERhdGEgVGFibGUgY2FsbGVkIFwiQWxnb1NlYyBJc29sYXRpb24g
UmVxdWVzdHNcIl1dPjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRf
MTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMGZza3ljMzwvb3V0Z29pbmc+PC9zdGFy
dEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzBobWEwMWZcIiBuYW1lPVwiQWxn
b1NlYzogSXNvbGF0ZSBIb3N0IEZyb20gTmV0d29yLi4uXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5j
dGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCJkZjI5
NzllZC0wMTc2LTRjOTgtOWQxZS1lMzNmYjllYjY3MGVcIj57XCJpbnB1dHNcIjp7fSxcInBvc3Rf
cHJvY2Vzc2luZ19zY3JpcHRcIjpcIiMjICBFeGFtcGxlOiBBbGdvU2VjOiBJc29sYXRlIGhvc3Qg
ZnJvbSBuZXR3b3JrIC0gcG9zdC1wcm9jZXNzaW5nIHNjcmlwdCAjI1xcblxcbiMgRXhhbXBsZSBv
ZiBleHBlY3RlZCBpc29sYXRpb24gcmVxdWVzdCByZXN1bHRcXG5cXFwiXFxcIlxcXCJcXG57J2hv
c3RuYW1lJzogJzEwLjAuMC4xJywgJ3VybCc6ICdodHRwczovLzE5Mi4xNjguNTguMTI5L0ZpcmVG
bG93L1RpY2tldC9EaXNwbGF5Lmh0bWw/aWQ9NTI1Myd9XFxuXFxcIlxcXCJcXFwiXFxuXFxuIyAg
R2xvYmFsc1xcbkVOVFJZX1RPX0RBVEFUQUJMRV9NQVAgPSB7XFxuICAgXFxcImlkXFxcIjogXFxc
ImlkXFxcIixcXG4gICBcXFwiaG9zdG5hbWVcXFwiOiBcXFwiaG9zdG5hbWVcXFwiLFxcbiAgIFxc
XCJ1cmxcXFwiOiBcXFwiY2hhbmdlX3JlcXVlc3RfdXJsXFxcIixcXG59XFxuXFxuIyBQcm9jZXNz
aW5nIGlmIHRoZSBmdW5jdGlvbiBpcyBhIHN1Y2Nlc3NcXG4jIGlmKHJlc3VsdHMuc3VjY2Vzcyk6
XFxuZW50cnkgPSByZXN1bHRzXFxuIyBBZGQgUm93XFxucm93ID0gaW5jaWRlbnQuYWRkUm93KFxc
XCJhbGdvc2VjX2lzb2xhdGlvbl9yZXF1ZXN0c1xcXCIpXFxuXFxuZm9yIGZpZWxkX25hbWUgaW4g
RU5UUllfVE9fREFUQVRBQkxFX01BUDpcXG5cXG4gIGlmIGVudHJ5LmdldChmaWVsZF9uYW1lKSBp
cyBOb25lOlxcbiAgICByb3dbRU5UUllfVE9fREFUQVRBQkxFX01BUFtmaWVsZF9uYW1lXV0gPSBc
XFwiTi9BXFxcIlxcblxcbiAgdHJ5OlxcbiAgICBpZiBmaWVsZF9uYW1lID09IFxcXCJpZFxcXCI6
XFxuICAgICAgcm93W0VOVFJZX1RPX0RBVEFUQUJMRV9NQVBbZmllbGRfbmFtZV1dID0gaW50KGVu
dHJ5W2ZpZWxkX25hbWVdKVxcbiAgICBlbHNlOlxcbiAgICAgIHJvd192YWx1ZSA9IGhlbHBlci5j
cmVhdGVSaWNoVGV4dChzdHIoZW50cnlbZmllbGRfbmFtZV0pKVxcbiAgICAgIHJvd1tFTlRSWV9U
T19EQVRBVEFCTEVfTUFQW2ZpZWxkX25hbWVdXSA9IHJvd192YWx1ZVxcbiAgZXhjZXB0IEluZGV4
RXJyb3I6XFxuICAgIHJvd1tFTlRSWV9UT19EQVRBVEFCTEVfTUFQW2ZpZWxkX25hbWVdXSA9IFxc
XCJOL0FcXFwiXCIsXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5hbGdvc2VjX2hv
c3RuYW1lID0gYXJ0aWZhY3QudmFsdWVcIixcInJlc3VsdF9uYW1lXCI6XCJcIn08L3Jlc2lsaWVu
dDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMGZz
a3ljMzwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xMzl5djAwPC9vdXRnb2luZz48
L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMGZza3ljM1wiIHNv
dXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzBo
bWEwMWZcIi8+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMDVtYjB0ZFwiPjxpbmNvbWluZz5TZXF1
ZW5jZUZsb3dfMTM5eXYwMDwvaW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwi
U2VxdWVuY2VGbG93XzEzOXl2MDBcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18waG1hMDFmXCIg
dGFyZ2V0UmVmPVwiRW5kRXZlbnRfMDVtYjB0ZFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0
QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJlPC90ZXh0
PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OFwi
IHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0
aW9uXzFreHhpeXRcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlh
Z3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1c
IkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50
XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2MlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1O
TGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIxNTdcIiB5
PVwiMjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpC
UE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0
QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRo
PVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpC
UE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0
aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE2OVwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMjIwXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMTUzXCIgeHNpOnR5cGU9
XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1O
U2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18waG1hMDFmXCIgaWQ9XCJTZXJ2aWNlVGFz
a18waG1hMDFmX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIg
eD1cIjI0Ni40MDgzNTI2NjgyMTM0N1wiIHk9XCIxNjUuNjQ3MzMxNzg2NTQyOVwiLz48L2JwbW5k
aTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18w
ZnNreWMzXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMGZza3ljM19kaVwiPjxvbWdkaTp3YXlwb2ludCB4
PVwiMTk4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBv
aW50IHg9XCIyNDZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRp
OkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjIy
MlwiIHk9XCIxODQuNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJw
bW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8wNW1iMHRkXCIgaWQ9XCJFbmRF
dmVudF8wNW1iMHRkX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZc
IiB4PVwiMzg3LjEyMTE2MDQwOTU1NjNcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxv
bWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNDA1LjEyMTE2MDQwOTU1
NjNcIiB5PVwiMjI3XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJw
bW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xMzl5djAwXCIgaWQ9XCJT
ZXF1ZW5jZUZsb3dfMTM5eXYwMF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMzQ2XCIgeHNpOnR5
cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIzODdcIiB4
c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjM2Ni41XCIgeT1cIjE4NFwi
Lz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5l
PjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+IiwgInZlcnNpb24iOiAxNn0sICJh
Y3Rpb25zIjogW119XSwgInJvbGVzIjogW10sICJ3b3Jrc3BhY2VzIjogW10sICJmdW5jdGlvbnMi
OiBbeyJpZCI6IDM3NCwgIm5hbWUiOiAiYWxnb3NlY19jaGVja19ob3N0X2ludGVybmV0X2Nvbm5l
Y3Rpdml0eSIsICJkaXNwbGF5X25hbWUiOiAiQWxnb1NlYzogQ2hlY2sgSG9zdCBJbnRlcm5ldCBD
b25uZWN0aXZpdHkiLCAiZGVzY3JpcHRpb24iOiB7ImZvcm1hdCI6ICJ0ZXh0IiwgImNvbnRlbnQi
OiAiR2l2ZW4gYSBob3N0bmFtZSwgcmV0dXJuIHdoZXRoZXIgb3Igbm90IGl0IGhhcyBpbnRlcm5l
dCBhY2Nlc3MuXG5cblRoZSBBbGdvU2VjIGludGVncmF0aW9uIHdpbGwgY2hlY2sgaWYgYSBnaXZl
biBob3N0L0lQIGlzIGhhcyBhY2Nlc3MgdG8gYSBwdWJsaWMga25vd24gaW50ZXJuZXQgbm9kZSBz
dWNoIGFzIDguOC44LjgifSwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJhbGdvc2VjIiwgImV4cG9y
dF9rZXkiOiAiYWxnb3NlY19jaGVja19ob3N0X2ludGVybmV0X2Nvbm5lY3Rpdml0eSIsICJ1dWlk
IjogImU2ODA5MmZjLTZkODItNGQ2OC1iOWQ2LTA0NTVmYjExZWZiNSIsICJ2ZXJzaW9uIjogMiwg
ImNyZWF0b3IiOiB7ImlkIjogOTQsICJ0eXBlIjogInVzZXIiLCAibmFtZSI6ICJhbG1vZy5jb2hl
bkBhbGdvc2VjLmNvbSIsICJkaXNwbGF5X25hbWUiOiAiQWxtb2cgQ29oZW4ifSwgImxhc3RfbW9k
aWZpZWRfYnkiOiB7ImlkIjogOTQsICJ0eXBlIjogInVzZXIiLCAibmFtZSI6ICJhbG1vZy5jb2hl
bkBhbGdvc2VjLmNvbSIsICJkaXNwbGF5X25hbWUiOiAiQWxtb2cgQ29oZW4ifSwgImxhc3RfbW9k
aWZpZWRfdGltZSI6IDE1NDM1NTUzMjI5NDgsICJ2aWV3X2l0ZW1zIjogW3sic3RlcF9sYWJlbCI6
IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90
eXBlIjogIl9fZnVuY3Rpb24iLCAiY29udGVudCI6ICJmZDliMzY1MC1mNzlmLTQ4NjItOGYwZC1h
M2RmZWNhMTY2MGYiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfV0sICJ3b3JrZmxvd3MiOiBb
eyJ3b3JrZmxvd19pZCI6IDMwMSwgIm5hbWUiOiAiRXhhbXBsZTogQWxnb1NlYzogQ2hlY2sgSG9z
dCBJbnRlcm5ldCBDb25uZWN0aXZpdHkiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9h
bGdvc2VjX2NoZWNrX2hvc3RfaW50ZXJuZXRfY29ubmVjdGl2aXR5IiwgIm9iamVjdF90eXBlIjog
ImFydGlmYWN0IiwgImRlc2NyaXB0aW9uIjogbnVsbCwgInV1aWQiOiBudWxsLCAiYWN0aW9ucyI6
IFtdfV19LCB7ImlkIjogMzU2LCAibmFtZSI6ICJhbGdvc2VjX2lzb2xhdGVfaG9zdF9mcm9tX25l
dHdvcmsiLCAiZGlzcGxheV9uYW1lIjogIkFsZ29TZWM6IElzb2xhdGUgSG9zdCBGcm9tIE5ldHdv
cmsiLCAiZGVzY3JpcHRpb24iOiB7ImZvcm1hdCI6ICJ0ZXh0IiwgImNvbnRlbnQiOiAiQ3JlYXRl
IGEgdHJhZmZpYyBjaGFuZ2UgcmVxdWVzdCB3aXRoIEFsZ29TZWMncyBGaXJlRmxvdyB0byBpc29s
YXRlIGEgaG9zdCBmcm9tIHRoZSBuZXR3b3JrLiBUaGVuIEFsZ29TZWMncyBBY3RpdmVDaGFuZ2Ug
dGhlbiBhdXRvbWF0aWNhbGx5IGltcGxlbWVudHMgcnVsZSBjaGFuZ2VzIGFjcm9zcyBhbGwgZmly
ZXdhbGxzIGluIHRoZSBuZXR3b3JrIHRvIGlzb2xhdGUgdGhlIGhvc3QgY29tcGxldGVseS4ifSwg
ImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJhbGdvc2VjIiwgImV4cG9ydF9rZXkiOiAiYWxnb3NlY19p
c29sYXRlX2hvc3RfZnJvbV9uZXR3b3JrIiwgInV1aWQiOiAiZGYyOTc5ZWQtMDE3Ni00Yzk4LTlk
MWUtZTMzZmI5ZWI2NzBlIiwgInZlcnNpb24iOiAzLCAiY3JlYXRvciI6IHsiaWQiOiA5NCwgInR5
cGUiOiAidXNlciIsICJuYW1lIjogImFsbW9nLmNvaGVuQGFsZ29zZWMuY29tIiwgImRpc3BsYXlf
bmFtZSI6ICJBbG1vZyBDb2hlbiJ9LCAibGFzdF9tb2RpZmllZF9ieSI6IHsiaWQiOiA5NCwgInR5
cGUiOiAidXNlciIsICJuYW1lIjogImFsbW9nLmNvaGVuQGFsZ29zZWMuY29tIiwgImRpc3BsYXlf
bmFtZSI6ICJBbG1vZyBDb2hlbiJ9LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU0MzUxMDQ1NjQx
MCwgInZpZXdfaXRlbXMiOiBbeyJzdGVwX2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAi
ZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJjb250
ZW50IjogImZkOWIzNjUwLWY3OWYtNDg2Mi04ZjBkLWEzZGZlY2ExNjYwZiIsICJzaG93X2xpbmtf
aGVhZGVyIjogZmFsc2V9XSwgIndvcmtmbG93cyI6IFt7IndvcmtmbG93X2lkIjogMjc5LCAibmFt
ZSI6ICJFeGFtcGxlOiBBbGdvU2VjOiBJc29sYXRlIEhvc3QgRnJvbSBOZXR3b3JrIiwgInByb2dy
YW1tYXRpY19uYW1lIjogImV4YW1wbGVfYWxnb3NlY19pc29sYXRlX2hvc3RfZnJvbV9uZXR3b3Jr
IiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgImRlc2NyaXB0aW9uIjogbnVsbCwgInV1aWQi
OiBudWxsLCAiYWN0aW9ucyI6IFtdfV19LCB7ImlkIjogMzc2LCAibmFtZSI6ICJhbGdvc2VjX2xp
c3RfYXNzb2NpYXRlZF9hcHBsaWNhdGlvbnMiLCAiZGlzcGxheV9uYW1lIjogIkFsZ29TZWM6IExp
c3QgQXNzb2NpYXRlZCBBcHBsaWNhdGlvbnMiLCAiZGVzY3JpcHRpb24iOiB7ImZvcm1hdCI6ICJ0
ZXh0IiwgImNvbnRlbnQiOiAiR2l2ZW4gYW4gSVAvSG9zdCBsaXN0IGFsbCBhc3NvY2lhdGVkIEJ1
c2luZXNzRmxvdyBhcHBsaWNhdGlvbnMuXG5Qcm92aWRlcyBiZXR0ZXIgYXNzZXNzbWVudCB0aGUg
cmlzayBvZiB0aGUgaW5jaWRlbnQuIFRoZSByZXN1bHRzIGNvbnRhaW4gd2hldGhlciBvciBub3Qg
aXQncyBhIGNyaXRpY2FsIGFwcGxpY2F0aW9uIGFuZCBhIHVybCBsaW5rIHRvIHRoZSBhcHBsaWNh
dGlvbiBvbiB0aGUgQWxnb1NlYyBCdXNpbmVzc0Zsb3cgZGFzaGJvYXJkLiJ9LCAiZGVzdGluYXRp
b25faGFuZGxlIjogImFsZ29zZWMiLCAiZXhwb3J0X2tleSI6ICJhbGdvc2VjX2xpc3RfYXNzb2Np
YXRlZF9hcHBsaWNhdGlvbnMiLCAidXVpZCI6ICJiN2M1NDliMi00MDUyLTRiYzgtYjI1Zi02MTQw
YzQzYjFlMWIiLCAidmVyc2lvbiI6IDMsICJjcmVhdG9yIjogeyJpZCI6IDk0LCAidHlwZSI6ICJ1
c2VyIiwgIm5hbWUiOiAiYWxtb2cuY29oZW5AYWxnb3NlYy5jb20iLCAiZGlzcGxheV9uYW1lIjog
IkFsbW9nIENvaGVuIn0sICJsYXN0X21vZGlmaWVkX2J5IjogeyJpZCI6IDk0LCAidHlwZSI6ICJ1
c2VyIiwgIm5hbWUiOiAiYWxtb2cuY29oZW5AYWxnb3NlYy5jb20iLCAiZGlzcGxheV9uYW1lIjog
IkFsbW9nIENvaGVuIn0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTQzNTk2ODY0MTE3LCAidmll
d19pdGVtcyI6IFt7InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50
IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgImNvbnRlbnQiOiAi
ZmQ5YjM2NTAtZjc5Zi00ODYyLThmMGQtYTNkZmVjYTE2NjBmIiwgInNob3dfbGlua19oZWFkZXIi
OiBmYWxzZX1dLCAid29ya2Zsb3dzIjogW3sid29ya2Zsb3dfaWQiOiAzMDIsICJuYW1lIjogIkV4
YW1wbGU6IEFsZ29TZWM6IExpc3QgQXNzb2NpYXRlZCBBcHBsaWNhdGlvbnMiLCAicHJvZ3JhbW1h
dGljX25hbWUiOiAiZXhhbXBsZV9hbGdvc2VjX2xpc3RfYXNzb2NpYXRlZF9hcHBsaWNhdGlvbnMi
LCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAiZGVzY3JpcHRpb24iOiBudWxsLCAidXVpZCI6
IG51bGwsICJhY3Rpb25zIjogW119XX1dfQ==
"""
    )